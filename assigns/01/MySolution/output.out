Poly/ML 5.9 Release
exception ConsMatch320
exception ERROR320 of string optn
exception ListSubscript320
exception OptnSubscript320
val assert320 = fn: bool -> unit
val assert320_some = fn: bool * string -> unit
val char_of_digit = fn: int -> char
val list_is_cons = fn: 'a list -> bool
val list_is_nil = fn: 'a list -> bool
val list_uncons = fn: 'a list -> 'a * 'a list
val list_unnil = fn: 'a list -> unit
eqtype 'a optn
val optn_is_none = fn: 'a optn -> bool
val optn_is_some = fn: 'a optn -> bool
val optn_unnone = fn: 'a optn -> unit
val optn_unsome = fn: 'a optn -> 'a
val print_char = fn: char -> unit
val print_int = fn: int -> unit
val it = (): unit
exception XlistConsMatch
exception XlistSubscript
val list_append = fn: 'a list * 'a list -> 'a list
val list_of_xlist = fn: 'a xlist -> 'a list
val list_reverse = fn: 'a list -> 'a list
datatype 'a xlist =
    xlist_append of 'a xlist * 'a xlist
  | xlist_cons of 'a * 'a xlist
  | xlist_nil
  | xlist_reverse of 'a xlist
  | xlist_snoc of 'a xlist * 'a
val it = (): unit
val xlist_size = fn: 'a xlist -> int
val it = (): unit
Assign01-01-test passed!
val list_size = fn: 'a list -> int
val xs =
   xlist_append
    (xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         ),
     xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         )): int xlist
> Poly/ML 5.9 Release
exception ConsMatch320
exception ERROR320 of string optn
exception ListSubscript320
exception OptnSubscript320
val assert320 = fn: bool -> unit
val assert320_some = fn: bool * string -> unit
val char_of_digit = fn: int -> char
val list_is_cons = fn: 'a list -> bool
val list_is_nil = fn: 'a list -> bool
val list_uncons = fn: 'a list -> 'a * 'a list
val list_unnil = fn: 'a list -> unit
eqtype 'a optn
val optn_is_none = fn: 'a optn -> bool
val optn_is_some = fn: 'a optn -> bool
val optn_unnone = fn: 'a optn -> unit
val optn_unsome = fn: 'a optn -> 'a
val print_char = fn: char -> unit
val print_int = fn: int -> unit
val it = (): unit
exception XlistConsMatch
exception XlistSubscript
val list_append = fn: 'a list * 'a list -> 'a list
val list_of_xlist = fn: 'a xlist -> 'a list
val list_reverse = fn: 'a list -> 'a list
datatype 'a xlist =
    xlist_append of 'a xlist * 'a xlist
  | xlist_cons of 'a * 'a xlist
  | xlist_nil
  | xlist_reverse of 'a xlist
  | xlist_snoc of 'a xlist * 'a
val it = (): unit
exception XlistConsMatch
exception XlistSubscript
val list_append = fn: 'a list * 'a list -> 'a list
val list_of_xlist = fn: 'a xlist -> 'a list
val list_reverse = fn: 'a list -> 'a list
datatype 'a xlist =
    xlist_append of 'a xlist * 'a xlist
  | xlist_cons of 'a * 'a xlist
  | xlist_nil
  | xlist_reverse of 'a xlist
  | xlist_snoc of 'a xlist * 'a
val it = (): unit
val xlist_size = fn: 'a xlist -> int
val it = (): unit
val xlist_sub = fn: 'a xlist * int -> 'a
val it = (): unit
Assign01-02-test passed!
val list_size = fn: 'a list -> int
val xs =
   xlist_append
    (xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         ),
     xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         )): int xlist
> Poly/ML 5.9 Release
exception ConsMatch320
exception ERROR320 of string optn
exception ListSubscript320
exception OptnSubscript320
val assert320 = fn: bool -> unit
val assert320_some = fn: bool * string -> unit
val char_of_digit = fn: int -> char
val list_is_cons = fn: 'a list -> bool
val list_is_nil = fn: 'a list -> bool
val list_uncons = fn: 'a list -> 'a * 'a list
val list_unnil = fn: 'a list -> unit
eqtype 'a optn
val optn_is_none = fn: 'a optn -> bool
val optn_is_some = fn: 'a optn -> bool
val optn_unnone = fn: 'a optn -> unit
val optn_unsome = fn: 'a optn -> 'a
val print_char = fn: char -> unit
val print_int = fn: int -> unit
val it = (): unit
exception XlistConsMatch
exception XlistSubscript
val list_append = fn: 'a list * 'a list -> 'a list
val list_of_xlist = fn: 'a xlist -> 'a list
val list_reverse = fn: 'a list -> 'a list
datatype 'a xlist =
    xlist_append of 'a xlist * 'a xlist
  | xlist_cons of 'a * 'a xlist
  | xlist_nil
  | xlist_reverse of 'a xlist
  | xlist_snoc of 'a xlist * 'a
val it = (): unit
val xlist_remove_reverse = fn: 'a xlist -> 'a xlist
val it = (): unit
Assign01-03-test passed!
val list_size = fn: 'a list -> int
val nappend = fn: 'a xlist -> int
val nreverse = fn: 'a xlist -> int
val xs =
   xlist_append
    (xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         ),
     xlist_reverse
      (
         xlist_snoc
          (xlist_cons
            (1, xlist_append (xlist_reverse ..., xlist_reverse ...)), 2)
         )): int xlist
val ys =
   xlist_append
    (xlist_cons
      (2,
       xlist_cons
        (1, xlist_append (xlist_cons (2, ...), xlist_cons (2, ...)))),
     xlist_cons
      (2,
       xlist_cons
        (1, xlist_append (xlist_cons (2, ...), xlist_cons (2, ...))))):
   int xlist
> 